Python 3.9.6 (v3.9.6:db3ff76da1, Jun 28 2021, 11:49:53) 
[Clang 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license()" for more information.
>>> 
== RESTART: /Users/jacobjin/Desktop/SDSU/2021 Fall/CS 682/Project_1/driver2.py =
--------------------------------------------------
Epoch 1/15
8/8 - 12s - loss: 2.1525 - accuracy: 0.2611
Epoch 2/15
8/8 - 10s - loss: 1.8851 - accuracy: 0.3129
Epoch 3/15
8/8 - 10s - loss: 1.6591 - accuracy: 0.3851
Epoch 4/15
8/8 - 10s - loss: 1.6020 - accuracy: 0.3789
Epoch 5/15
8/8 - 10s - loss: 1.4409 - accuracy: 0.4222
Epoch 6/15
8/8 - 10s - loss: 1.4055 - accuracy: 0.4381
Epoch 7/15
8/8 - 10s - loss: 1.2712 - accuracy: 0.4840
Epoch 8/15
8/8 - 10s - loss: 1.1989 - accuracy: 0.4931
Epoch 9/15
8/8 - 10s - loss: 1.1451 - accuracy: 0.5067
Epoch 10/15
8/8 - 10s - loss: 1.1276 - accuracy: 0.5177
Epoch 11/15
8/8 - 10s - loss: 1.0967 - accuracy: 0.5024
Epoch 12/15
8/8 - 11s - loss: 0.9894 - accuracy: 0.5527
Epoch 13/15
8/8 - 10s - loss: 0.9895 - accuracy: 0.5686
Epoch 14/15
8/8 - 10s - loss: 1.0563 - accuracy: 0.5005
Epoch 15/15
8/8 - 10s - loss: 1.0066 - accuracy: 0.5450
2/2 - 1s - loss: 1.0997 - accuracy: 0.5123
labels:    [0, 0, 1, 1, 2, 2, 3, 3]
predicted: [0, 0, 0, 0, 3, 3, 3, 3]
Epoch 1/15
8/8 - 13s - loss: 2.0632 - accuracy: 0.2400
Epoch 2/15
8/8 - 10s - loss: 1.8522 - accuracy: 0.2584
Epoch 3/15
8/8 - 10s - loss: 1.6680 - accuracy: 0.3550
Epoch 4/15
8/8 - 10s - loss: 1.4495 - accuracy: 0.4556
Epoch 5/15
8/8 - 10s - loss: 1.4217 - accuracy: 0.4627
Epoch 6/15
8/8 - 10s - loss: 1.3397 - accuracy: 0.5297
Epoch 7/15
8/8 - 10s - loss: 1.2866 - accuracy: 0.5033
Epoch 8/15
8/8 - 10s - loss: 1.1356 - accuracy: 0.6058
Epoch 9/15
8/8 - 10s - loss: 1.0470 - accuracy: 0.6235
Epoch 10/15
8/8 - 10s - loss: 0.9918 - accuracy: 0.6765
Epoch 11/15
8/8 - 10s - loss: 1.0183 - accuracy: 0.6305
Epoch 12/15
8/8 - 10s - loss: 0.9387 - accuracy: 0.6973
Epoch 13/15
8/8 - 10s - loss: 0.8475 - accuracy: 0.7635
Epoch 14/15
8/8 - 10s - loss: 0.8916 - accuracy: 0.6845
Epoch 15/15
8/8 - 10s - loss: 0.9468 - accuracy: 0.6330
2/2 - 1s - loss: 1.1970 - accuracy: 0.4200
labels:    [0, 0, 1, 1, 2, 2, 3, 3]
predicted: [3, 0, 3, 3, 3, 3, 3, 3]
Epoch 1/15
8/8 - 13s - loss: 2.1747 - accuracy: 0.2335
Epoch 2/15
8/8 - 10s - loss: 1.9213 - accuracy: 0.3147
Epoch 3/15
8/8 - 11s - loss: 1.7423 - accuracy: 0.3277
Epoch 4/15
8/8 - 9s - loss: 1.6795 - accuracy: 0.3739
Epoch 5/15
8/8 - 11s - loss: 1.4643 - accuracy: 0.4087
Epoch 6/15
8/8 - 10s - loss: 1.3967 - accuracy: 0.4310
Epoch 7/15
8/8 - 10s - loss: 1.2892 - accuracy: 0.4762
Epoch 8/15
8/8 - 10s - loss: 1.2071 - accuracy: 0.5322
Epoch 9/15
8/8 - 11s - loss: 1.1719 - accuracy: 0.5049
Epoch 10/15
8/8 - 10s - loss: 1.1446 - accuracy: 0.5442
Epoch 11/15
8/8 - 10s - loss: 1.0575 - accuracy: 0.5562
Epoch 12/15
8/8 - 10s - loss: 1.0850 - accuracy: 0.5215
Epoch 13/15
8/8 - 9s - loss: 1.1059 - accuracy: 0.5418
Epoch 14/15
8/8 - 10s - loss: 1.0226 - accuracy: 0.5913
Epoch 15/15
8/8 - 10s - loss: 0.9163 - accuracy: 0.6211
WARNING:tensorflow:5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7fcc9ae715e0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
WARNING:tensorflow:6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7fcc9ae715e0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
2/2 - 1s - loss: 1.0509 - accuracy: 0.6237
labels:    [0, 0, 1, 1, 2, 2, 3, 3]
predicted: [0, 0, 1, 1, 3, 3, 3, 3]
Epoch 1/15
8/8 - 14s - loss: 2.1568 - accuracy: 0.2446
Epoch 2/15
8/8 - 10s - loss: 1.8657 - accuracy: 0.3187
Epoch 3/15
8/8 - 10s - loss: 1.6420 - accuracy: 0.4085
Epoch 4/15
8/8 - 10s - loss: 1.4868 - accuracy: 0.4710
Epoch 5/15
8/8 - 9s - loss: 1.4662 - accuracy: 0.4999
Epoch 6/15
8/8 - 10s - loss: 1.3302 - accuracy: 0.5379
Epoch 7/15
8/8 - 10s - loss: 1.2285 - accuracy: 0.5835
Epoch 8/15
8/8 - 9s - loss: 1.1803 - accuracy: 0.6483
Epoch 9/15
8/8 - 9s - loss: 1.1099 - accuracy: 0.6338
Epoch 10/15
8/8 - 10s - loss: 0.9016 - accuracy: 0.7263
Epoch 11/15
8/8 - 10s - loss: 0.9185 - accuracy: 0.7126
Epoch 12/15
8/8 - 9s - loss: 0.9812 - accuracy: 0.6896
Epoch 13/15
8/8 - 10s - loss: 0.9016 - accuracy: 0.6535
Epoch 14/15
8/8 - 9s - loss: 0.9484 - accuracy: 0.6563
Epoch 15/15
8/8 - 10s - loss: 0.8354 - accuracy: 0.7165
2/2 - 1s - loss: 0.8291 - accuracy: 0.8327
labels:    [0, 0, 1, 1, 2, 2, 3, 3]
predicted: [0, 0, 1, 1, 2, 2, 3, 3]
Epoch 1/15
8/8 - 13s - loss: 2.0976 - accuracy: 0.2565
Epoch 2/15
8/8 - 9s - loss: 1.9469 - accuracy: 0.2782
Epoch 3/15
8/8 - 9s - loss: 1.7263 - accuracy: 0.3485
Epoch 4/15
8/8 - 9s - loss: 1.5650 - accuracy: 0.4002
Epoch 5/15
8/8 - 9s - loss: 1.4100 - accuracy: 0.4898
Epoch 6/15
8/8 - 9s - loss: 1.4200 - accuracy: 0.5037
Epoch 7/15
8/8 - 10s - loss: 1.2464 - accuracy: 0.5315
Epoch 8/15
8/8 - 10s - loss: 1.0955 - accuracy: 0.6427
Epoch 9/15
8/8 - 10s - loss: 1.0505 - accuracy: 0.6583
Epoch 10/15
8/8 - 9s - loss: 1.0130 - accuracy: 0.6560
Epoch 11/15
8/8 - 9s - loss: 0.9919 - accuracy: 0.6512
Epoch 12/15
8/8 - 10s - loss: 0.9624 - accuracy: 0.6044
Epoch 13/15
8/8 - 9s - loss: 0.9025 - accuracy: 0.6808
Epoch 14/15
8/8 - 9s - loss: 0.8432 - accuracy: 0.7096
Epoch 15/15
8/8 - 9s - loss: 0.9007 - accuracy: 0.6644
WARNING:tensorflow:5 out of the last 9 calls to <function Model.make_test_function.<locals>.test_function at 0x7fccaa427940> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
2/2 - 1s - loss: 0.9352 - accuracy: 0.7766
labels:    [0, 0, 1, 1, 2, 2, 3, 3]
predicted: [0, 1, 1, 1, 2, 2, 3, 3]
result for model: 1 layer 50 nodes 0.01 l2
frame avg err: 0.3669
frame std err: 0.1553
file avg err:  0.3
file std err:  0.2318
[[ 8  1  0  1]
 [ 2  6  0  2]
 [ 0  0  4  6]
 [ 0  0  0 10]]
--------------------------------------------------
--------------------------------------------------
Epoch 1/15
8/8 - 49s - loss: 4.7466 - accuracy: 0.2365
Epoch 2/15
8/8 - 40s - loss: 4.2670 - accuracy: 0.2868
Epoch 3/15
8/8 - 39s - loss: 3.7062 - accuracy: 0.4944
Epoch 4/15
8/8 - 46s - loss: 3.3185 - accuracy: 0.5427
Epoch 5/15
8/8 - 40s - loss: 3.1117 - accuracy: 0.5803
Epoch 6/15
8/8 - 40s - loss: 2.9603 - accuracy: 0.5889
Epoch 7/15
8/8 - 44s - loss: 2.4825 - accuracy: 0.7335
Epoch 8/15
8/8 - 44s - loss: 2.2694 - accuracy: 0.7559
Epoch 9/15
8/8 - 39s - loss: 2.1410 - accuracy: 0.7821
Epoch 10/15
8/8 - 41s - loss: 2.2143 - accuracy: 0.6785
Epoch 11/15
8/8 - 42s - loss: 2.0116 - accuracy: 0.7185
Epoch 12/15
8/8 - 42s - loss: 1.7961 - accuracy: 0.7962
Epoch 13/15
8/8 - 45s - loss: 1.6294 - accuracy: 0.8125
Epoch 14/15
8/8 - 48s - loss: 1.5676 - accuracy: 0.8240
Epoch 15/15
8/8 - 43s - loss: 1.5367 - accuracy: 0.8066
WARNING:tensorflow:6 out of the last 11 calls to <function Model.make_test_function.<locals>.test_function at 0x7fcc82a44e50> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
2/2 - 4s - loss: 1.8497 - accuracy: 0.7410
labels:    [0, 0, 1, 1, 2, 2, 3, 3]
predicted: [0, 0, 1, 1, 2, 2, 3, 2]
Epoch 1/15
8/8 - 51s - loss: 4.7705 - accuracy: 0.2085
Epoch 2/15
8/8 - 38s - loss: 4.1174 - accuracy: 0.3899
Epoch 3/15
8/8 - 40s - loss: 3.6810 - accuracy: 0.4919
Epoch 4/15
8/8 - 45s - loss: 3.2162 - accuracy: 0.5999
Epoch 5/15
8/8 - 40s - loss: 2.9129 - accuracy: 0.7164
Epoch 6/15
8/8 - 41s - loss: 2.7832 - accuracy: 0.6730
Epoch 7/15
8/8 - 43s - loss: 2.5577 - accuracy: 0.6955
Epoch 8/15
8/8 - 45s - loss: 2.3951 - accuracy: 0.6683
Epoch 9/15
8/8 - 38s - loss: 2.2388 - accuracy: 0.7556
Epoch 10/15
8/8 - 41s - loss: 2.1699 - accuracy: 0.7370
Epoch 11/15
8/8 - 38s - loss: 1.8494 - accuracy: 0.8198
Epoch 12/15
8/8 - 43s - loss: 1.8523 - accuracy: 0.7340
Epoch 13/15
8/8 - 43s - loss: 1.7833 - accuracy: 0.7295
Epoch 14/15
8/8 - 39s - loss: 1.6792 - accuracy: 0.7565
Epoch 15/15
8/8 - 40s - loss: 1.6111 - accuracy: 0.7725
2/2 - 3s - loss: 2.1108 - accuracy: 0.3362
labels:    [0, 0, 1, 1, 2, 2, 3, 3]
predicted: [0, 0, 0, 0, 0, 0, 0, 3]
Epoch 1/15
8/8 - 52s - loss: 4.6392 - accuracy: 0.2534
Epoch 2/15
8/8 - 42s - loss: 4.0982 - accuracy: 0.3690
Epoch 3/15
8/8 - 42s - loss: 3.5768 - accuracy: 0.5676
Epoch 4/15
8/8 - 45s - loss: 3.2178 - accuracy: 0.6334
Epoch 5/15
8/8 - 43s - loss: 2.8993 - accuracy: 0.7090
Epoch 6/15
8/8 - 40s - loss: 2.7624 - accuracy: 0.6912
Epoch 7/15
8/8 - 40s - loss: 2.6298 - accuracy: 0.6772
Epoch 8/15
8/8 - 42s - loss: 2.3860 - accuracy: 0.7217
Epoch 9/15
8/8 - 42s - loss: 2.2397 - accuracy: 0.7473
Epoch 10/15
8/8 - 44s - loss: 2.0746 - accuracy: 0.7361
Epoch 11/15
8/8 - 43s - loss: 2.0437 - accuracy: 0.7007
Epoch 12/15
8/8 - 41s - loss: 1.8064 - accuracy: 0.7823
Epoch 13/15
8/8 - 43s - loss: 1.7315 - accuracy: 0.7795
Epoch 14/15
8/8 - 42s - loss: 1.5988 - accuracy: 0.8163
Epoch 15/15
8/8 - 43s - loss: 1.5898 - accuracy: 0.7763
2/2 - 3s - loss: 1.7920 - accuracy: 0.8165
labels:    [0, 0, 1, 1, 2, 2, 3, 3]
predicted: [0, 0, 1, 1, 2, 1, 3, 3]
Epoch 1/15
8/8 - 48s - loss: 4.6879 - accuracy: 0.2389
Epoch 2/15
8/8 - 37s - loss: 4.2497 - accuracy: 0.3243
Epoch 3/15
8/8 - 34s - loss: 3.6704 - accuracy: 0.5527
Epoch 4/15
8/8 - 39s - loss: 3.2640 - accuracy: 0.6632
Epoch 5/15
8/8 - 36s - loss: 3.0285 - accuracy: 0.6664
Epoch 6/15
8/8 - 37s - loss: 2.8727 - accuracy: 0.6502
Epoch 7/15
8/8 - 38s - loss: 2.5411 - accuracy: 0.7181
Epoch 8/15
8/8 - 37s - loss: 2.5061 - accuracy: 0.6770
Epoch 9/15
8/8 - 37s - loss: 2.1092 - accuracy: 0.7907
Epoch 10/15
8/8 - 35s - loss: 2.0736 - accuracy: 0.7916
Epoch 11/15
8/8 - 38s - loss: 2.0246 - accuracy: 0.7368
Epoch 12/15
8/8 - 39s - loss: 1.7792 - accuracy: 0.7758
Epoch 13/15
8/8 - 35s - loss: 1.7758 - accuracy: 0.7643
Epoch 14/15
8/8 - 37s - loss: 1.6566 - accuracy: 0.8128
Epoch 15/15
8/8 - 39s - loss: 1.4811 - accuracy: 0.8229
2/2 - 4s - loss: 1.9852 - accuracy: 0.2790
labels:    [0, 0, 1, 1, 2, 2, 3, 3]
predicted: [2, 2, 2, 2, 2, 2, 2, 2]
Epoch 1/15
8/8 - 47s - loss: 4.6769 - accuracy: 0.2336
Epoch 2/15
8/8 - 38s - loss: 4.2827 - accuracy: 0.2778
Epoch 3/15
8/8 - 39s - loss: 3.7869 - accuracy: 0.4073
Epoch 4/15
8/8 - 36s - loss: 3.4205 - accuracy: 0.5596
Epoch 5/15
8/8 - 37s - loss: 3.1162 - accuracy: 0.6095
Epoch 6/15
8/8 - 39s - loss: 2.7831 - accuracy: 0.6741
Epoch 7/15
8/8 - 38s - loss: 2.6728 - accuracy: 0.6501
Epoch 8/15
8/8 - 36s - loss: 2.4784 - accuracy: 0.6860
Epoch 9/15
8/8 - 39s - loss: 2.1915 - accuracy: 0.7811
Epoch 10/15
8/8 - 40s - loss: 2.1173 - accuracy: 0.7395
Epoch 11/15
8/8 - 37s - loss: 1.9654 - accuracy: 0.7779
Epoch 12/15
8/8 - 39s - loss: 1.8293 - accuracy: 0.8054
Epoch 13/15
8/8 - 36s - loss: 1.7369 - accuracy: 0.8077
Epoch 14/15
8/8 - 39s - loss: 1.5702 - accuracy: 0.8738
Epoch 15/15
8/8 - 39s - loss: 1.4684 - accuracy: 0.8592
2/2 - 4s - loss: 1.9379 - accuracy: 0.5460
labels:    [0, 0, 1, 1, 2, 2, 3, 3]
predicted: [0, 2, 2, 2, 2, 2, 3, 3]
result for model: 3 layer 50 nodes 0.01 l2
frame avg err: 0.4563
frame std err: 0.2128
file avg err:  0.4
file std err:  0.255
[[7 0 3 0]
 [2 4 4 0]
 [2 1 7 0]
 [1 0 3 6]]
--------------------------------------------------
>>> 